using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class MonsterPoolManager : Singleton<MonsterPoolManager>
{
    public GameObject[] objectPrefabs;

    [SerializeField]
    private int poolSize = 10;

    //private Queue<GameObject> pool = new Queue<GameObject>();
    private Dictionary<int, Queue<GameObject>> pool = new Dictionary<int, Queue<GameObject>>();

    GameObject poolParent;

    
    protected override void Awake()
    {
        base.Awake();

        var enemies = Resources.LoadAll<GameObject>("Prefabs/Entity/Enemy");
        var bosses = Resources.LoadAll<GameObject>("Prefabs/Entity/Boss");

        objectPrefabs = new GameObject[enemies.Length + bosses.Length];
        enemies.CopyTo(objectPrefabs, 0);
        bosses.CopyTo(objectPrefabs, enemies.Length);


        pool[0] = new Queue<GameObject>();
        pool[1] = new Queue<GameObject>();
        pool[2] = new Queue<GameObject>();

    }

    void Start()
    {
        // ??????????????????????癲????????????????????黎앸럽??筌??沃섏쥓爾녜툣???????????袁⑸즴筌?씛彛???돗???????
        for (int j = 0; j < objectPrefabs.Length; j++)
        {
            for (int i = 0; i < poolSize; i++)
            {
                GameObject obj = Instantiate(objectPrefabs[j]);
                int temp = j;
                //obj.GetComponent<EnemyStat>().OnDie += () => ReturnObject(obj, temp);
                obj.SetActive(false);  // ??????????????????癲????????????????????
                obj.transform.SetParent(gameObject.transform);
                pool[j].Enqueue(obj);  // ?????????????????븐뼐???????????
            }
        }
    }


    // ?????????????????????????癲?????????????????????거??????????遺얘턁????????椰꾧퀡遊븅뜮???????
    public GameObject GetObject(int index)
    {
        GameManager.Instance.EnemyCounting(1);
        if (pool[index].Count > 0)
        {
            GameObject obj = pool[index].Dequeue();  // ????????????????????????癲????????癲ル슢?싩땟?????耀붾굝?????????????????????????????
            obj.SetActive(true);  // ??????????????????癲?????????
            return obj;
        }
        else
        {
            // ??????????밸븶筌믩끃??獄???????멥렑?????????????????????????癲???????????????????饔낅떽???????꾩렯?????????????????????덉떻???
            GameObject obj = Instantiate(objectPrefabs[index]);
            return obj;
        }
    }

    // ????????????됰Ŧ????????????????????????????癲??????????????ш끽維뽳쭩?뱀땡???얩맪????????????????癲ル슢?싩땟?????????룸챷援???????????
    public void ReturnObject(GameObject obj, int index)
    {
        GameManager.Instance.EnemyCounting(-1);

        //??潁뺛깾???????썹땟???> ?????밸븶?????ㅳ늾?????

        if (AchievementManager.Instance.goalKillCnt[obj.name.Substring(0, obj.name.Length - "(Clone)".Length)] > AchievementManager.Instance.killCnt[obj.name.Substring(0, obj.name.Length - "(Clone)".Length)])
        {
            AchievementManager.Instance.killCnt[obj.name.Substring(0, obj.name.Length - "(Clone)".Length)] = AchievementManager.Instance.killCnt[obj.name.Substring(0, obj.name.Length - "(Clone)".Length)] + 1;

            if (AchievementManager.Instance.achievementFlag[obj.name.Substring(0, obj.name.Length - "(Clone)".Length)] == false)
            {
                if (AchievementManager.Instance.killCnt[obj.name.Substring(0, obj.name.Length - "(Clone)".Length)] == AchievementManager.Instance.goalKillCnt[obj.name.Substring(0, obj.name.Length - "(Clone)".Length)])
                {
                    //????⑤챷諭푎I ?癲ル슢????癲ル슢???????????嚥▲굧?????
                    AchievementManager.Instance.currentKey = obj.name.Substring(0, obj.name.Length - "(Clone)".Length);
                    UIManager.Instance.ShowUI("AchievementEvent");
                }


            }
        
        }

        if(!AchievementManager.Instance.currentKillCnt.ContainsKey(obj.name.Substring(0, obj.name.Length - "(Clone)".Length)))
        {
            AchievementManager.Instance.currentKillCnt.Add(obj.name.Substring(0, obj.name.Length - "(Clone)".Length), 1);
        }
        else
        {
            AchievementManager.Instance.currentKillCnt[obj.name.Substring(0, obj.name.Length - "(Clone)".Length)] += 1;
        }



        obj.SetActive(false);  // ??????????????????癲????????????????????
        pool[index].Enqueue(obj);  // ???????????ш끽維뽳쭩?뱀땡???얩맪???????????
    }
}
